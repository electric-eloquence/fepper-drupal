<?php

/**
 * @file
 * Functions to support theming in the Fepper theme.
 */

use Drupal\Core\Template\Attribute;

// Parse variables.styl for breakpoints. Add them to the global $config array.
// Do this in the global scope so any and all functions can access these
// breakpoint configurations, even module functions.
// Out of the box, they will be:
// $config['breakpoints']['bp_lg_max'] = -1;
// $config['breakpoints']['bp_lg_min'] = 1024;
// $config['breakpoints']['bp_md_min'] = 768;
// $config['breakpoints']['bp_sm_min'] = 480;
// $config['breakpoints']['bp_xs_min'] = 0;
$bp_ini = drupal_get_path('theme', 'fepper') . '/_scripts/variables.styl';
if (file_exists($bp_ini)) {
  $GLOBALS['config']['breakpoints'] = parse_ini_file($bp_ini);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function fepper_form_comment_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $user = \Drupal::currentUser();
  if (!$user->id()) {
    $form['comment_body']['widget'][0]['#type'] = 'textarea';
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function fepper_form_search_block_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $form['keys']['#attributes']['placeholder'] = 'Search';
  $form['keys']['#attributes']['size'] = '';
  $form['actions']['#attributes']['class'][] = 'icon-search';
}

/**
 * Implements template_preprocess_block().
 */
function fepper_preprocess_block(&$variables) {
  // Change main navigation and search form block titles to unicodes for
  // appropriate font icons.
  if (!empty($variables['elements']['#id'])) {
    switch ($variables['elements']['#id']) {
      case 'mainnavigation':
        $variables['title_attributes']['class'][] = 'icon-menu';
        break;

      case 'searchform':
        $variables['title_attributes']['class'][] = 'icon-search';
        break;
    }
  }
}

/**
 * Implements template_preprocess_comment().
 */
function fepper_preprocess_comment(&$variables) {
  $variables['title'] = '';
  $variables['permalink'] = '';
}

/**
 * Implements template_preprocess_page().
 */
function fepper_preprocess_page(&$variables) {
  $variables['page_attributes'] = new Attribute(array('class' => array('layout-container')));
  if ($variables['is_front']) {
    $variables['page_attributes']['class'][] = 'front';
  }
}

/**
 * Implements template_preprocess_region().
 */
function fepper_preprocess_region(&$variables) {
  $variables['attributes']['id'][0] = 'region-' . str_replace('_', '-', $variables['region']);
}

/**
 * Implements template_preprocess_views_view().
 */
function fepper_preprocess_views_view(&$variables) {
  $view = $variables['view'];

  $variables['attributes']['id'][0] = 'views-view';
  $variables['attributes']['id'][0] .= '-' . str_replace('_', '-', $view->element['#view_id']);
  $variables['attributes']['id'][0] .= '-' . str_replace('_', '-', $view->element['#display_id']);

  if (strpos($view->current_display, 'page') === 0) {
    $variables['title'] = $view->getTitle();
  }
}
